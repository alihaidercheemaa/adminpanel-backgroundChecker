let initializeDropzone = (elementSelector, inputSelector) => {
    var element = $(elementSelector),
    previewContainer = $(".dz-preview");
    element.length && (Dropzone.autoDiscover = !1, element.each((function () {
        //======================= Adjust Image Size =======================
        var maxsize = element.data("max-filesize");
        var previousImage = "";
        var previousImagePath = "";
        var editImage = element.find("#dropzone_upload");
        //======================= Adjust Image Size =======================
        var currentElement, isMultiple, previewElement, previousFile, dropzoneConfig;
        currentElement = $(this), isMultiple = void 0 !== currentElement.data("dropzone-multiple"), previewElement = currentElement.find(previewContainer), previousFile = void 0, dropzoneConfig = {
            url: currentElement.data("dropzone-url"),
            thumbnailWidth: null,
            thumbnailHeight: null,
            previewsContainer: previewElement.get(0),
            previewTemplate: previewElement.html(),
            maxFiles: isMultiple ? null : 1,
            acceptedFiles: isMultiple ? null : ".jpg, .jpeg, .png, .svg",
            autoProcessQueue: false,
             dictDefaultMessage: `
                    <span class="d-block mb-2">
                    <svg class="w-44" width="55" height="51" viewBox="0 0 55 51" fill="none" xmlns="http://www.w3.org/2000/svg"> <g opacity="0.7" clip-path="url(#clip0_1160_20679)"> <path d="M55 7.61093V27.2149C54.2854 29.3348 52.1319 29.3209 50.8932 27.8665C48.5073 25.066 45.9729 22.3912 43.4987 19.6649C42.5893 18.6623 41.6778 17.6619 40.7211 16.6111C35.4854 23.2531 30.283 29.8522 25.0969 36.4309C25.1367 36.5189 25.1464 36.5554 25.1679 36.5833C26.6627 38.5207 28.1662 40.4517 29.6459 42.3999C29.8956 42.7294 30.1464 42.87 30.5704 42.8668C32.9681 42.8453 35.367 42.8528 37.7647 42.8571C39.1121 42.8593 40.0743 43.7652 40.0667 45.0124C40.0592 46.2361 39.1046 47.1388 37.7895 47.1388C28.0532 47.142 18.3168 47.1527 8.5805 47.1345C3.82802 47.127 0.0182953 43.3208 0.0107619 38.5819C-0.00322858 28.5674 -0.00430478 18.5528 0.0118381 8.53939C0.0193715 3.83053 3.8334 0.0168531 8.55037 0.0104129C21.186 -0.00568761 33.8216 -0.00246751 46.4572 0.0104129C50.3433 0.013633 53.6957 2.62621 54.703 6.37548C54.8127 6.78444 54.901 7.19876 55 7.61093ZM50.7038 21.2223C50.7038 20.9218 50.7038 20.7672 50.7038 20.6116C50.7038 16.6841 50.706 12.7567 50.7038 8.8292C50.7017 6.11144 48.8808 4.291 46.1634 4.28993C33.7236 4.28778 21.2828 4.28778 8.84309 4.28993C6.12462 4.28993 4.30478 6.11144 4.30478 8.83028C4.30263 18.6494 4.3037 28.4686 4.30478 38.2867C4.30478 41.041 6.11709 42.8539 8.87107 42.855C13.9012 42.8571 18.9303 42.855 23.9604 42.855C24.1304 42.855 24.2994 42.855 24.5878 42.855C21.3657 38.686 18.22 34.6179 15.0484 30.5134C14.0067 31.8626 13.0349 33.1431 12.0394 34.4043C11.271 35.379 9.98601 35.5507 9.03035 34.8391C8.07361 34.1274 7.86806 32.8286 8.61494 31.8422C10.1776 29.7771 11.7585 27.7248 13.3663 25.694C13.6171 25.3773 14.0185 25.124 14.4027 24.9791C15.2873 24.6442 16.1752 24.963 16.8145 25.7852C18.5471 28.0135 20.269 30.2493 21.9963 32.4819C22.1115 32.6311 22.2342 32.7739 22.3719 32.9424C22.5269 32.7524 22.641 32.6161 22.7508 32.4766C28.1037 25.6864 33.4557 18.8942 38.8108 12.1062C39.7901 10.8654 41.2462 10.8128 42.3138 11.972C42.7012 12.3928 43.0822 12.82 43.4664 13.2429C45.8437 15.863 48.2211 18.4831 50.706 21.2223H50.7038Z" fill="#525252" /> <path d="M54.9998 38.5705C54.9137 38.7648 54.8405 38.9666 54.7393 39.1533C54.0527 40.4339 52.39 40.6775 51.3192 39.6342C50.5648 38.8989 49.848 38.124 49.1119 37.3694C48.9935 37.2481 48.8655 37.1354 48.6556 36.9379C48.6556 37.2352 48.6556 37.4231 48.6556 37.612C48.6556 41.3237 48.6631 45.0365 48.6524 48.7482C48.6481 50.3239 47.2426 51.364 45.8102 50.8809C44.9051 50.5761 44.3627 49.7818 44.3616 48.731C44.3584 45.001 44.3605 41.2711 44.3605 37.5411C44.3605 37.3511 44.3605 37.1622 44.3605 36.8713C44.1679 37.0399 44.0484 37.1343 43.9397 37.2395C43.1347 38.0274 42.3523 38.8378 41.5248 39.5998C40.6369 40.4167 39.3401 40.3619 38.5275 39.5236C37.7279 38.6971 37.6881 37.4113 38.5146 36.5751C39.9966 35.0756 41.4763 33.5697 43.0379 32.155C45.0181 30.3603 48.1466 30.4086 50.0816 32.2537C51.5807 33.6834 52.9959 35.2012 54.4219 36.705C54.6812 36.9787 54.8104 37.3758 54.9998 37.715V38.5716V38.5705Z" fill="#525252" /> <path d="M8.59961 14.1535C8.59638 10.6157 11.5032 7.71758 15.0492 7.71973C18.5953 7.72187 21.4946 10.6243 21.487 14.1653C21.4795 17.6774 18.5856 20.5658 15.0643 20.5744C11.5172 20.583 8.60176 17.6881 8.59961 14.1546V14.1535ZM15.06 16.2874C16.2374 16.2788 17.1984 15.3052 17.1898 14.1288C17.1812 12.9524 16.2072 11.996 15.0266 12.0046C13.8471 12.0132 12.8893 12.9835 12.8969 14.1621C12.9044 15.3374 13.8794 16.2949 15.06 16.2874Z" fill="#525252" /></g><defs><clipPath id="clip0_1160_20679"><rect width="55" height="51" fill="white" /></clipPath></defs></svg>
                    </span>
                    <span><h5 class="mb-0 Heebo-SemiBold text-gray">Drag and drop a file here or click to upload</h5></span>
                `,
            init: function () {
                this.on("addedfile", (function (file) {
                    //===================== Image size validation =====================
                    if (file.type.startsWith('image/')) {
                        var reader = new FileReader();
                        reader.onload = (e) => {
                            var img = new Image();
                            img.src = e.target.result;
                            img.onload = () => {
                                if(maxsize!=undefined){
                                    var [maxwidth, maxheight] = maxsize.split("x");
                                    var [imageWidth, imageHeight] = [img.width, img.height];
                                    if (imageHeight > maxheight || imageWidth > maxwidth) {
                                        Notification('danger', 'Error', `Image size exceeds limits. Please upload an image no larger than ${maxwidth}px x ${maxheight}px.`);
                                        //================================== Check if previous image is present or not ==================================
                                        if (previousImage != "") {
                                            this.emit("addedfile", previousImage);
                                            this.emit("thumbnail", previousImage, previousImagePath);
                                            $(currentElement).addClass("dz-max-files-reached");
                                        } else {
                                            this.removeFile(file);
                                            $(inputSelector).val("");
                                            if(editImage.length>0){
                                                $(currentElement).addClass("dz-max-files-reached");
                                                var editImageName = $(editImage).children()[0].src.split('/').pop();
                                                $(inputSelector).val(editImageName);
                                            }
                                        }
                                    } else {
                                        previousImage = file; //Store the image name before uploading
                                        this.processQueue();
                                    }
                                }else{
                                    this.processQueue();
                                }
                            };
                        };
                        reader.readAsDataURL(file);
                    }
                    //==================== Image size validation
                    !isMultiple && previousFile && this.removeFile(previousFile), previousFile = file
                }));
            },
            success: function (file, response) {
                let result = JSON.parse(response);
                if (result.status == 1) {
                    currentElement.find("#dropzone_upload").css("display", "none");
                    $(inputSelector).val(result.message);
                    previousImagePath = `uploads/${response.payload}`; // Store the Image Path of uploaded file
                } else {
                    $(".dz-preview .dz-preview-img").attr({ 'src': "", 'alt': "" });
                    Notification('danger', 'Error', `${result.message}`);
                }
            }
        };
        previewElement.html(""), currentElement.dropzone(dropzoneConfig);
    })))
}
initializeDropzone('[data-toggle="dropzone-image-1"]', '#image-1');